{"ast":null,"code":"import _slicedToArray from \"C:\\\\booking-app\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\booking-app\\\\client\\\\src\\\\Bookings.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5)\n  }\n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const count = props.count,\n        page = props.page,\n        rowsPerPage = props.rowsPerPage,\n        onChangePage = props.onChangePage;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    onClick: handleFirstPageButtonClick,\n    disabled: page === 0,\n    \"aria-label\": \"First Page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, theme.direction === 'rtl' ? React.createElement(LastPageIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }) : React.createElement(FirstPageIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  })), React.createElement(IconButton, {\n    onClick: handleBackButtonClick,\n    disabled: page === 0,\n    \"aria-label\": \"Previous Page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, theme.direction === 'rtl' ? React.createElement(KeyboardArrowRight, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }) : React.createElement(KeyboardArrowLeft, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  })), React.createElement(IconButton, {\n    onClick: handleNextButtonClick,\n    disabled: page >= Math.ceil(count / rowsPerPage) - 1,\n    \"aria-label\": \"Next Page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, theme.direction === 'rtl' ? React.createElement(KeyboardArrowLeft, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }) : React.createElement(KeyboardArrowRight, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  })), React.createElement(IconButton, {\n    onClick: handleLastPageButtonClick,\n    disabled: page >= Math.ceil(count / rowsPerPage) - 1,\n    \"aria-label\": \"Last Page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, theme.direction === 'rtl' ? React.createElement(FirstPageIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }) : React.createElement(LastPageIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  })));\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired\n};\n\nfunction createData(name, email, address, bookingType, bookingDate, bookingTime) {\n  return {\n    name,\n    email,\n    address,\n    bookingType,\n    bookingDate,\n    bookingTime\n  };\n}\n\nconst rows = [// createData('Jon Stewart', 'jon@daily.show', '5323 Levander Loop Austin, TX 78702', 'Housekeeping', 'June 5, 2019', '9:00 am' ),\n].sort((a, b) => a.bookingDate < b.bookingDate ? -1 : 1);\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3)\n  },\n  table: {\n    minWidth: 500,\n    backgroundColor: '#f5f5f5',\n    fontFamily: 'Open Sans'\n  },\n  tableWrapper: {\n    overflowX: 'auto'\n  },\n  tableHead: {\n    color: '#000000',\n    fontSize: '.9rem'\n  }\n}));\nexport default function Bookings(props) {\n  // Object.keys(props.bookings.data).forEach((key) => { console.log(key + ': ' + props.bookings.data[key]); });\n  // console.log(props.bookings.data[0]);\n  // console.log(\"in bookings component: \", (props.bookings.length ? props.booking.data.map(booking => booking.name) : null));\n  const string = JSON.stringify(props.bookings);\n  const json = JSON.parse(string);\n\n  if (json.length !== 0) {\n    console.log(json.length);\n    console.log(json);\n  }\n\n  const classes = useStyles2();\n\n  const _React$useState = React.useState(0),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        page = _React$useState2[0],\n        setPage = _React$useState2[1];\n\n  const _React$useState3 = React.useState(5),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        rowsPerPage = _React$useState4[0],\n        setRowsPerPage = _React$useState4[1];\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n  }\n\n  return React.createElement(Paper, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.tableWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(Table, {\n    className: classes.table,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    id: \"Table-head\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    className: classes.tableHead,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, \"Customer\"), React.createElement(TableCell, {\n    className: classes.tableHead,\n    align: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, \"Email\"), React.createElement(TableCell, {\n    className: classes.tableHead,\n    align: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, \"Address\"), React.createElement(TableCell, {\n    className: classes.tableHead,\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, \"Booking Type\"), React.createElement(TableCell, {\n    className: classes.tableHead,\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, \"Booking Date/Time\"))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => React.createElement(TableRow, {\n    key: row.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    component: \"th\",\n    scope: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, row.name), React.createElement(TableCell, {\n    align: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, row.email), React.createElement(TableCell, {\n    align: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, row.address), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, row.bookingType), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, row.bookingDate, \" at \", row.bookingTime))), emptyRows > 0 && React.createElement(TableRow, {\n    style: {\n      height: 48 * emptyRows\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    colSpan: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }))), React.createElement(TableFooter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, React.createElement(TablePagination, {\n    rowsPerPageOptions: [5, 10, 20],\n    colSpan: 3,\n    count: rows.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    SelectProps: {\n      inputProps: {\n        'aria-label': 'Rows per page'\n      },\n      native: true\n    },\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    ActionsComponent: TablePaginationActions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }))))));\n}","map":{"version":3,"sources":["C:\\booking-app\\client\\src\\Bookings.js"],"names":["React","PropTypes","makeStyles","useTheme","Table","TableHead","TableBody","TableCell","TableFooter","TablePagination","TableRow","Paper","IconButton","FirstPageIcon","KeyboardArrowLeft","KeyboardArrowRight","LastPageIcon","useStyles1","theme","root","flexShrink","color","palette","text","secondary","marginLeft","spacing","TablePaginationActions","props","classes","count","page","rowsPerPage","onChangePage","handleFirstPageButtonClick","event","handleBackButtonClick","handleNextButtonClick","handleLastPageButtonClick","Math","max","ceil","direction","propTypes","number","isRequired","func","createData","name","email","address","bookingType","bookingDate","bookingTime","rows","sort","a","b","useStyles2","width","marginTop","table","minWidth","backgroundColor","fontFamily","tableWrapper","overflowX","tableHead","fontSize","Bookings","string","JSON","stringify","bookings","json","parse","length","console","log","useState","setPage","setRowsPerPage","emptyRows","min","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","target","value","slice","map","row","height","inputProps","native"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\n\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"First Page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"Previous Page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"Next Page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"Last Page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction createData(name, email, address, bookingType, bookingDate, bookingTime) {\r\n  return { name, email, address, bookingType, bookingDate, bookingTime};\r\n}\r\n\r\nconst rows = [\r\n  // createData('Jon Stewart', 'jon@daily.show', '5323 Levander Loop Austin, TX 78702', 'Housekeeping', 'June 5, 2019', '9:00 am' ),\r\n  \r\n].sort((a, b) => (a.bookingDate < b.bookingDate ? -1 : 1));\r\n\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n    backgroundColor: '#f5f5f5',\r\n    fontFamily:'Open Sans',\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n  tableHead:{\r\n    color: '#000000',\r\n    fontSize: '.9rem',\r\n  },\r\n}));\r\n\r\nexport default function Bookings(props) {\r\n  // Object.keys(props.bookings.data).forEach((key) => { console.log(key + ': ' + props.bookings.data[key]); });\r\n  // console.log(props.bookings.data[0]);\r\n  // console.log(\"in bookings component: \", (props.bookings.length ? props.booking.data.map(booking => booking.name) : null));\r\n  const string = JSON.stringify(props.bookings);\r\n  const json = JSON.parse(string);\r\n  if(json.length !== 0){\r\n    console.log(json.length);\r\n    console.log(json);\r\n  }\r\n\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n  }\r\n\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n  }\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <div className={classes.tableWrapper}>\r\n        <Table className={classes.table}>\r\n        <TableHead id=\"Table-head\">\r\n          <TableRow >\r\n            <TableCell className={classes.tableHead}>Customer</TableCell>\r\n            <TableCell className={classes.tableHead}align=\"left\">Email</TableCell>\r\n            <TableCell className={classes.tableHead}align=\"left\">Address</TableCell>\r\n            <TableCell className={classes.tableHead}align=\"right\">Booking Type</TableCell>\r\n            <TableCell className={classes.tableHead}align=\"right\">Booking Date/Time</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n          <TableBody>\r\n            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\r\n              <TableRow key={row.name}>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {row.name}\r\n                </TableCell>\r\n                <TableCell align=\"left\">{row.email}</TableCell>\r\n                <TableCell align=\"left\">{row.address}</TableCell>\r\n                <TableCell align=\"right\">{row.bookingType}</TableCell>\r\n                <TableCell align=\"right\">{row.bookingDate} at {row.bookingTime}</TableCell>         \r\n              </TableRow>\r\n            ))}\r\n\r\n            {emptyRows > 0 && (\r\n              <TableRow style={{ height: 48 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, 20]}\r\n                colSpan={3}\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'Rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n      </div>\r\n    </Paper>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}