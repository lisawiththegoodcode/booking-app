{"ast":null,"code":"var _jsxFileName = \"C:\\\\booking-app\\\\client\\\\src\\\\Bookings.js\";\nimport React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport moment from 'moment';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n    overflowX: 'auto'\n  },\n  table: {\n    minWidth: 500,\n    backgroundColor: '#f5f5f5',\n    fontFamily: 'Open Sans'\n  },\n  tableWrapper: {\n    overflowX: 'auto'\n  },\n  tableHead: {\n    color: '#000000',\n    fontSize: '.9rem'\n  }\n}));\nconst rows = [];\n\nfunction createData(name, email, address, city, state, zip, bookingType, bookingDate, bookingTime) {\n  return {\n    name,\n    email,\n    address,\n    city,\n    state,\n    zip,\n    bookingType,\n    bookingDate,\n    bookingTime\n  };\n}\n\nfunction formatDate(date) {\n  const d = new Date(date);\n  var month = d.toLocaleString('en-us', {\n    month: 'long'\n  });\n  var day = date.substring(8, 10);\n  var year = d.getFullYear();\n  return \"\".concat(month, \" \").concat(day, \", \").concat(year);\n}\n\nfunction formatTime(time) {\n  return moment(time, 'HH:mm').format('hh:mm a');\n}\n\nexport default function Bookings(props) {\n  const classes = useStyles();\n  const string = JSON.stringify(props.bookings);\n  const json = JSON.parse(string);\n\n  if (json.data.length !== 0) {\n    for (var i = 0; i < json.data.length; i++) {\n      rows.push(createData(\"\".concat(json.data[i].name), \"\".concat(json.data[i].email), \"\".concat(json.data[i].street_address), \"\".concat(json.data[i].city), \"\".concat(json.data[i].state), \"\".concat(json.data[i].zip_code), \"\".concat(json.data[i].type), formatDate(json.data[i].date), formatTime(json.data[i].time)));\n    }\n  }\n\n  return React.createElement(Paper, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(Table, {\n    className: classes.table,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    id: \"Table-head\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    className: classes.tableHead,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Customer\"), React.createElement(TableCell, {\n    className: classes.tableHead,\n    align: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Email\"), React.createElement(TableCell, {\n    className: classes.tableHead,\n    align: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Address\"), React.createElement(TableCell, {\n    className: classes.tableHead,\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"Booking Type\"), React.createElement(TableCell, {\n    className: classes.tableHead,\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Booking Date/Time\"))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, rows.map(row => React.createElement(TableRow, {\n    key: row.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    component: \"th\",\n    scope: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, row.name), React.createElement(TableCell, {\n    align: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, row.email), React.createElement(TableCell, {\n    align: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, row.address, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }), row.city, \", \", row.state, \" \", row.zip), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, row.bookingType), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, row.bookingDate, \" at \", row.bookingTime))))));\n}","map":{"version":3,"sources":["C:\\booking-app\\client\\src\\Bookings.js"],"names":["React","makeStyles","useTheme","Table","TableHead","TableBody","TableCell","TableRow","Paper","moment","useStyles","theme","root","width","marginTop","spacing","overflowX","table","minWidth","backgroundColor","fontFamily","tableWrapper","tableHead","color","fontSize","rows","createData","name","email","address","city","state","zip","bookingType","bookingDate","bookingTime","formatDate","date","d","Date","month","toLocaleString","day","substring","year","getFullYear","formatTime","time","format","Bookings","props","classes","string","JSON","stringify","bookings","json","parse","data","length","i","push","street_address","zip_code","type","map","row"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport moment from 'moment';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n    overflowX: 'auto',\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n    backgroundColor: '#f5f5f5',\r\n    fontFamily:'Open Sans',\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n  tableHead:{\r\n    color: '#000000',\r\n    fontSize: '.9rem',\r\n  },\r\n}));\r\n\r\nconst rows = [];\r\n\r\nfunction createData(name, email, address, city, state, zip, bookingType, bookingDate, bookingTime) {\r\n  return { name, email, address, city, state, zip, bookingType, bookingDate, bookingTime};\r\n}\r\n\r\nfunction formatDate(date){\r\n  const d = new Date(date);\r\n  var month = d.toLocaleString('en-us', {month: 'long'});\r\n  var day = date.substring(8,10);\r\n  var year = d.getFullYear();\r\n  return `${month} ${day}, ${year}`;\r\n}\r\n\r\nfunction formatTime(time){\r\n  return moment(time, 'HH:mm').format('hh:mm a');\r\n}\r\n\r\nexport default function Bookings(props) {\r\n  const classes = useStyles();\r\n  const string = JSON.stringify(props.bookings);\r\n  const json = JSON.parse(string);\r\n  if(json.data.length !== 0){\r\n    for(var i = 0; i<json.data.length; i++)\r\n    {\r\n      rows.push(createData(`${json.data[i].name}`, \r\n      `${json.data[i].email}`, \r\n      `${json.data[i].street_address}`, \r\n      `${json.data[i].city}`,\r\n      `${json.data[i].state}`, \r\n      `${json.data[i].zip_code}`,\r\n      `${json.data[i].type}`,\r\n      formatDate(json.data[i].date),\r\n      formatTime(json.data[i].time)));\r\n    }\r\n  }\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <Table className={classes.table}>\r\n      <TableHead id=\"Table-head\">\r\n          <TableRow >\r\n            <TableCell className={classes.tableHead}>Customer</TableCell>\r\n            <TableCell className={classes.tableHead}align=\"left\">Email</TableCell>\r\n            <TableCell className={classes.tableHead}align=\"left\">Address</TableCell>\r\n            <TableCell className={classes.tableHead}align=\"right\">Booking Type</TableCell>\r\n            <TableCell className={classes.tableHead}align=\"right\">Booking Date/Time</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map(row => (\r\n            <TableRow key={row.name}>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {row.name}\r\n                </TableCell>\r\n                <TableCell align=\"left\">{row.email}</TableCell>\r\n                <TableCell align=\"left\">{row.address}<br />{row.city}, {row.state} {row.zip}</TableCell>\r\n                <TableCell align=\"right\">{row.bookingType}</TableCell>\r\n                <TableCell align=\"right\">{row.bookingDate} at {row.bookingTime}</TableCell>         \r\n              </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </Paper>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}