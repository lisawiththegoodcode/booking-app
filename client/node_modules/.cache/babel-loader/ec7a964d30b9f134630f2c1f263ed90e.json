{"ast":null,"code":"var _jsxFileName = \"C:\\\\booking-app\\\\client\\\\src\\\\Bookings.js\";\nimport React from 'react'; // import PropTypes from 'prop-types';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell'; // import TableFooter from '@material-ui/core/TableFooter';\n// import TablePagination from '@material-ui/core/TablePagination';\n\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper'; // import IconButton from '@material-ui/core/IconButton';\n// import FirstPageIcon from '@material-ui/icons/FirstPage';\n// import KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\n// import KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\n// import LastPageIcon from '@material-ui/icons/LastPage';\n// const useStyles1 = makeStyles(theme => ({\n//   root: {\n//     flexShrink: 0,\n//     color: theme.palette.text.secondary,\n//     marginLeft: theme.spacing(2.5),\n//   },\n// }));\n// function TablePaginationActions(props) {\n//   const classes = useStyles1();\n//   const theme = useTheme();\n//   const { count, page, rowsPerPage, onChangePage } = props;\n//   function handleFirstPageButtonClick(event) {\n//     onChangePage(event, 0);\n//   }\n//   function handleBackButtonClick(event) {\n//     onChangePage(event, page - 1);\n//   }\n//   function handleNextButtonClick(event) {\n//     onChangePage(event, page + 1);\n//   }\n//   function handleLastPageButtonClick(event) {\n//     onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n//   }\n//   return (\n//     <div className={classes.root}>\n//       <IconButton\n//         onClick={handleFirstPageButtonClick}\n//         disabled={page === 0}\n//         aria-label=\"First Page\"\n//       >\n//         {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n//       </IconButton>\n//       <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"Previous Page\">\n//         {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n//       </IconButton>\n//       <IconButton\n//         onClick={handleNextButtonClick}\n//         disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n//         aria-label=\"Next Page\"\n//       >\n//         {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n//       </IconButton>\n//       <IconButton\n//         onClick={handleLastPageButtonClick}\n//         disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n//         aria-label=\"Last Page\"\n//       >\n//         {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n//       </IconButton>\n//     </div>\n//   );\n// }\n// TablePaginationActions.propTypes = {\n//   count: PropTypes.number.isRequired,\n//   onChangePage: PropTypes.func.isRequired,\n//   page: PropTypes.number.isRequired,\n//   rowsPerPage: PropTypes.number.isRequired,\n// };\n// function createData(name, email, address, bookingType, bookingDate, bookingTime) {\n//   return { name, email, address, bookingType, bookingDate, bookingTime};\n// }\n// const rows = [];\n// // const rows = [\n//   // createData('Jon Stewart', 'jon@daily.show', '5323 Levander Loop Austin, TX 78702', 'Housekeeping', 'June 5, 2019', '9:00 am' ),\n// // ].sort((a, b) => (a.bookingDate < b.bookingDate ? -1 : 1));\n// const useStyles2 = makeStyles(theme => ({\n//   root: {\n//     width: '100%',\n//     marginTop: theme.spacing(3),\n//   },\n//   table: {\n//     minWidth: 500,\n//     backgroundColor: '#f5f5f5',\n//     fontFamily:'Open Sans',\n//   },\n//   tableWrapper: {\n//     overflowX: 'auto',\n//   },\n//   tableHead:{\n//     color: '#000000',\n//     fontSize: '.9rem',\n//   },\n// }));\n// export default function Bookings(props) {\n//   // Object.keys(props.bookings.data).forEach((key) => { console.log(key + ': ' + props.bookings.data[key]); });\n//   // console.log(props.bookings.data[0]);\n//   // console.log(\"in bookings component: \", (props.bookings.length ? props.booking.data.map(booking => booking.name) : null));\n//   const string = JSON.stringify(props.bookings);\n//   const json = JSON.parse(string);\n//   if(json.data.length !== 0){\n//     for(var i = 0; i<json.data.length; i++)\n//     {\n//       console.log(json.data[i].name);\n//       rows.push(createData(`${json.data[i].name}`, \n//       `${json.data[i].email}`, \n//       `${json.data[i].street_address} ${json.data[i].city} ${json.data[i].state} ${json.data[i].zip_code}`,\n//       `${json.data[i].type}`,\n//       `${json.data[i].date}`,\n//       `${json.data[i].time}`))\n//     }\n//   }\n//   const classes = useStyles2();\n//   const [page, setPage] = React.useState(0);\n//   const [rowsPerPage, setRowsPerPage] = React.useState(5);\n//   const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n//   function handleChangePage(event, newPage) {\n//     setPage(newPage);\n//   }\n//   function handleChangeRowsPerPage(event) {\n//     setRowsPerPage(parseInt(event.target.value, 10));\n//   }\n//   return (\n//     <Paper className={classes.root}>\n//       <div className={classes.tableWrapper}>\n//         <Table className={classes.table}>\n// <TableHead id=\"Table-head\">\n//   <TableRow >\n//     <TableCell className={classes.tableHead}>Customer</TableCell>\n//     <TableCell className={classes.tableHead}align=\"left\">Email</TableCell>\n//     <TableCell className={classes.tableHead}align=\"left\">Address</TableCell>\n//     <TableCell className={classes.tableHead}align=\"right\">Booking Type</TableCell>\n//     <TableCell className={classes.tableHead}align=\"right\">Booking Date/Time</TableCell>\n//   </TableRow>\n// </TableHead>\n//           <TableBody>\n//             {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n//               <TableRow key={row.name}>\n//                 <TableCell component=\"th\" scope=\"row\">\n//                   {row.name}\n//                 </TableCell>\n//                 <TableCell align=\"left\">{row.email}</TableCell>\n//                 <TableCell align=\"left\">{row.address}</TableCell>\n//                 <TableCell align=\"right\">{row.bookingType}</TableCell>\n//                 <TableCell align=\"right\">{row.bookingDate} at {row.bookingTime}</TableCell>         \n//               </TableRow>\n//             ))}\n//             {emptyRows > 0 && (\n//               <TableRow style={{ height: 48 * emptyRows }}>\n//                 <TableCell colSpan={6} />\n//               </TableRow>\n//             )}\n//           </TableBody>\n//           <TableFooter>\n//             <TableRow>\n//               <TablePagination\n//                 rowsPerPageOptions={[5, 10, 20]}\n//                 colSpan={3}\n//                 count={rows.length}\n//                 rowsPerPage={rowsPerPage}\n//                 page={page}\n//                 SelectProps={{\n//                   inputProps: { 'aria-label': 'Rows per page' },\n//                   native: true,\n//                 }}\n//                 onChangePage={handleChangePage}\n//                 onChangeRowsPerPage={handleChangeRowsPerPage}\n//                 ActionsComponent={TablePaginationActions}\n//               />\n//             </TableRow>\n//           </TableFooter>\n//         </Table>\n//       </div>\n//     </Paper>\n//   );\n// }\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n    overflowX: 'auto'\n  },\n  table: {\n    minWidth: 500,\n    backgroundColor: '#f5f5f5',\n    fontFamily: 'Open Sans'\n  },\n  tableWrapper: {\n    overflowX: 'auto'\n  },\n  tableHead: {\n    color: '#000000',\n    fontSize: '.9rem'\n  }\n}));\nconst rows = [];\n\nfunction createData(name, email, address, city, state, zip, bookingType, bookingDate, bookingTime) {\n  return {\n    name,\n    email,\n    address,\n    city,\n    state,\n    zip,\n    bookingType,\n    bookingDate,\n    bookingTime\n  };\n}\n\nfunction formatDate(date) {\n  var d = new Date(date);\n  console.log(d.getMonth());\n}\n\nfunction formatTime(time) {}\n\nexport default function Bookings(props) {\n  const classes = useStyles();\n  const string = JSON.stringify(props.bookings);\n  const json = JSON.parse(string);\n\n  if (json.data.length !== 0) {\n    for (var i = 0; i < json.data.length; i++) {\n      formatDate(json.data[i].date);\n      console.log(json.data[i].name);\n      rows.push(createData(\"\".concat(json.data[i].name), \"\".concat(json.data[i].email), \"\".concat(json.data[i].street_address), \"\".concat(json.data[i].city), \"\".concat(json.data[i].state), \"\".concat(json.data[i].zip_code), \"\".concat(json.data[i].type), \"\".concat(json.data[i].date), \"\".concat(json.data[i].time)));\n    }\n  }\n\n  return React.createElement(Paper, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258\n    },\n    __self: this\n  }, React.createElement(Table, {\n    className: classes.table,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    id: \"Table-head\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    className: classes.tableHead,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262\n    },\n    __self: this\n  }, \"Customer\"), React.createElement(TableCell, {\n    className: classes.tableHead,\n    align: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263\n    },\n    __self: this\n  }, \"Email\"), React.createElement(TableCell, {\n    className: classes.tableHead,\n    align: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264\n    },\n    __self: this\n  }, \"Address\"), React.createElement(TableCell, {\n    className: classes.tableHead,\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265\n    },\n    __self: this\n  }, \"Booking Type\"), React.createElement(TableCell, {\n    className: classes.tableHead,\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266\n    },\n    __self: this\n  }, \"Booking Date/Time\"))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269\n    },\n    __self: this\n  }, rows.map(row => React.createElement(TableRow, {\n    key: row.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    component: \"th\",\n    scope: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272\n    },\n    __self: this\n  }, row.name), React.createElement(TableCell, {\n    align: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275\n    },\n    __self: this\n  }, row.email), React.createElement(TableCell, {\n    align: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276\n    },\n    __self: this\n  }, row.address, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276\n    },\n    __self: this\n  }), row.city, \", \", row.state, \" \", row.zip), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277\n    },\n    __self: this\n  }, row.bookingType), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278\n    },\n    __self: this\n  }, row.bookingDate, \" at \", row.bookingTime))))));\n}","map":{"version":3,"sources":["C:\\booking-app\\client\\src\\Bookings.js"],"names":["React","makeStyles","useTheme","Table","TableHead","TableBody","TableCell","TableRow","Paper","useStyles","theme","root","width","marginTop","spacing","overflowX","table","minWidth","backgroundColor","fontFamily","tableWrapper","tableHead","color","fontSize","rows","createData","name","email","address","city","state","zip","bookingType","bookingDate","bookingTime","formatDate","date","d","Date","console","log","getMonth","formatTime","time","Bookings","props","classes","string","JSON","stringify","bookings","json","parse","data","length","i","push","street_address","zip_code","type","map","row"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,0BAArC;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB,C,CACA;AACA;;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,KAAP,MAAkB,yBAAlB,C,CACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACQ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,SAAS,GAAGR,UAAU,CAACS,KAAK,KAAK;AACrCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAA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","sourcesContent":["import React from 'react';\r\n// import PropTypes from 'prop-types';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\n// import TableFooter from '@material-ui/core/TableFooter';\r\n// import TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n// import IconButton from '@material-ui/core/IconButton';\r\n// import FirstPageIcon from '@material-ui/icons/FirstPage';\r\n// import KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\n// import KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\n// import LastPageIcon from '@material-ui/icons/LastPage';\r\n\r\n// const useStyles1 = makeStyles(theme => ({\r\n//   root: {\r\n//     flexShrink: 0,\r\n//     color: theme.palette.text.secondary,\r\n//     marginLeft: theme.spacing(2.5),\r\n//   },\r\n// }));\r\n\r\n// function TablePaginationActions(props) {\r\n//   const classes = useStyles1();\r\n//   const theme = useTheme();\r\n//   const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n//   function handleFirstPageButtonClick(event) {\r\n//     onChangePage(event, 0);\r\n//   }\r\n\r\n//   function handleBackButtonClick(event) {\r\n//     onChangePage(event, page - 1);\r\n//   }\r\n\r\n//   function handleNextButtonClick(event) {\r\n//     onChangePage(event, page + 1);\r\n//   }\r\n\r\n//   function handleLastPageButtonClick(event) {\r\n//     onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n//   }\r\n\r\n//   return (\r\n//     <div className={classes.root}>\r\n//       <IconButton\r\n//         onClick={handleFirstPageButtonClick}\r\n//         disabled={page === 0}\r\n//         aria-label=\"First Page\"\r\n//       >\r\n//         {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n//       </IconButton>\r\n//       <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"Previous Page\">\r\n//         {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n//       </IconButton>\r\n//       <IconButton\r\n//         onClick={handleNextButtonClick}\r\n//         disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n//         aria-label=\"Next Page\"\r\n//       >\r\n//         {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n//       </IconButton>\r\n//       <IconButton\r\n//         onClick={handleLastPageButtonClick}\r\n//         disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n//         aria-label=\"Last Page\"\r\n//       >\r\n//         {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n//       </IconButton>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// TablePaginationActions.propTypes = {\r\n//   count: PropTypes.number.isRequired,\r\n//   onChangePage: PropTypes.func.isRequired,\r\n//   page: PropTypes.number.isRequired,\r\n//   rowsPerPage: PropTypes.number.isRequired,\r\n// };\r\n\r\n// function createData(name, email, address, bookingType, bookingDate, bookingTime) {\r\n//   return { name, email, address, bookingType, bookingDate, bookingTime};\r\n// }\r\n\r\n// const rows = [];\r\n// // const rows = [\r\n//   // createData('Jon Stewart', 'jon@daily.show', '5323 Levander Loop Austin, TX 78702', 'Housekeeping', 'June 5, 2019', '9:00 am' ),\r\n  \r\n// // ].sort((a, b) => (a.bookingDate < b.bookingDate ? -1 : 1));\r\n\r\n// const useStyles2 = makeStyles(theme => ({\r\n//   root: {\r\n//     width: '100%',\r\n//     marginTop: theme.spacing(3),\r\n//   },\r\n//   table: {\r\n//     minWidth: 500,\r\n//     backgroundColor: '#f5f5f5',\r\n//     fontFamily:'Open Sans',\r\n//   },\r\n//   tableWrapper: {\r\n//     overflowX: 'auto',\r\n//   },\r\n//   tableHead:{\r\n//     color: '#000000',\r\n//     fontSize: '.9rem',\r\n//   },\r\n// }));\r\n\r\n// export default function Bookings(props) {\r\n//   // Object.keys(props.bookings.data).forEach((key) => { console.log(key + ': ' + props.bookings.data[key]); });\r\n//   // console.log(props.bookings.data[0]);\r\n//   // console.log(\"in bookings component: \", (props.bookings.length ? props.booking.data.map(booking => booking.name) : null));\r\n//   const string = JSON.stringify(props.bookings);\r\n//   const json = JSON.parse(string);\r\n//   if(json.data.length !== 0){\r\n//     for(var i = 0; i<json.data.length; i++)\r\n//     {\r\n//       console.log(json.data[i].name);\r\n//       rows.push(createData(`${json.data[i].name}`, \r\n//       `${json.data[i].email}`, \r\n//       `${json.data[i].street_address} ${json.data[i].city} ${json.data[i].state} ${json.data[i].zip_code}`,\r\n//       `${json.data[i].type}`,\r\n//       `${json.data[i].date}`,\r\n//       `${json.data[i].time}`))\r\n//     }\r\n//   }\r\n\r\n//   const classes = useStyles2();\r\n//   const [page, setPage] = React.useState(0);\r\n//   const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n//   const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n//   function handleChangePage(event, newPage) {\r\n//     setPage(newPage);\r\n//   }\r\n\r\n//   function handleChangeRowsPerPage(event) {\r\n//     setRowsPerPage(parseInt(event.target.value, 10));\r\n//   }\r\n\r\n//   return (\r\n//     <Paper className={classes.root}>\r\n//       <div className={classes.tableWrapper}>\r\n//         <Table className={classes.table}>\r\n        // <TableHead id=\"Table-head\">\r\n        //   <TableRow >\r\n        //     <TableCell className={classes.tableHead}>Customer</TableCell>\r\n        //     <TableCell className={classes.tableHead}align=\"left\">Email</TableCell>\r\n        //     <TableCell className={classes.tableHead}align=\"left\">Address</TableCell>\r\n        //     <TableCell className={classes.tableHead}align=\"right\">Booking Type</TableCell>\r\n        //     <TableCell className={classes.tableHead}align=\"right\">Booking Date/Time</TableCell>\r\n        //   </TableRow>\r\n        // </TableHead>\r\n//           <TableBody>\r\n//             {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\r\n//               <TableRow key={row.name}>\r\n//                 <TableCell component=\"th\" scope=\"row\">\r\n//                   {row.name}\r\n//                 </TableCell>\r\n//                 <TableCell align=\"left\">{row.email}</TableCell>\r\n//                 <TableCell align=\"left\">{row.address}</TableCell>\r\n//                 <TableCell align=\"right\">{row.bookingType}</TableCell>\r\n//                 <TableCell align=\"right\">{row.bookingDate} at {row.bookingTime}</TableCell>         \r\n//               </TableRow>\r\n//             ))}\r\n\r\n//             {emptyRows > 0 && (\r\n//               <TableRow style={{ height: 48 * emptyRows }}>\r\n//                 <TableCell colSpan={6} />\r\n//               </TableRow>\r\n//             )}\r\n//           </TableBody>\r\n//           <TableFooter>\r\n//             <TableRow>\r\n//               <TablePagination\r\n//                 rowsPerPageOptions={[5, 10, 20]}\r\n//                 colSpan={3}\r\n//                 count={rows.length}\r\n//                 rowsPerPage={rowsPerPage}\r\n//                 page={page}\r\n//                 SelectProps={{\r\n//                   inputProps: { 'aria-label': 'Rows per page' },\r\n//                   native: true,\r\n//                 }}\r\n//                 onChangePage={handleChangePage}\r\n//                 onChangeRowsPerPage={handleChangeRowsPerPage}\r\n//                 ActionsComponent={TablePaginationActions}\r\n//               />\r\n//             </TableRow>\r\n//           </TableFooter>\r\n//         </Table>\r\n//       </div>\r\n//     </Paper>\r\n//   );\r\n// }\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n    overflowX: 'auto',\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n    backgroundColor: '#f5f5f5',\r\n    fontFamily:'Open Sans',\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n  tableHead:{\r\n    color: '#000000',\r\n    fontSize: '.9rem',\r\n  },\r\n}));\r\n\r\nconst rows = [];\r\n\r\nfunction createData(name, email, address, city, state, zip, bookingType, bookingDate, bookingTime) {\r\n  return { name, email, address, city, state, zip, bookingType, bookingDate, bookingTime};\r\n}\r\n\r\nfunction formatDate(date){\r\n  var d = new Date(date);\r\n  console.log(d.getMonth());\r\n}\r\n\r\nfunction formatTime(time){\r\n\r\n}\r\n\r\nexport default function Bookings(props) {\r\n  const classes = useStyles();\r\n  const string = JSON.stringify(props.bookings);\r\n  const json = JSON.parse(string);\r\n  if(json.data.length !== 0){\r\n    for(var i = 0; i<json.data.length; i++)\r\n    {\r\n      formatDate(json.data[i].date);\r\n      console.log(json.data[i].name);\r\n      rows.push(createData(`${json.data[i].name}`, \r\n      `${json.data[i].email}`, \r\n      `${json.data[i].street_address}`, \r\n      `${json.data[i].city}`,\r\n      `${json.data[i].state}`, \r\n      `${json.data[i].zip_code}`,\r\n      `${json.data[i].type}`,\r\n      `${json.data[i].date}`,\r\n      `${json.data[i].time}`));\r\n    }\r\n  }\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <Table className={classes.table}>\r\n      <TableHead id=\"Table-head\">\r\n          <TableRow >\r\n            <TableCell className={classes.tableHead}>Customer</TableCell>\r\n            <TableCell className={classes.tableHead}align=\"left\">Email</TableCell>\r\n            <TableCell className={classes.tableHead}align=\"left\">Address</TableCell>\r\n            <TableCell className={classes.tableHead}align=\"right\">Booking Type</TableCell>\r\n            <TableCell className={classes.tableHead}align=\"right\">Booking Date/Time</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map(row => (\r\n            <TableRow key={row.name}>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {row.name}\r\n                </TableCell>\r\n                <TableCell align=\"left\">{row.email}</TableCell>\r\n                <TableCell align=\"left\">{row.address}<br />{row.city}, {row.state} {row.zip}</TableCell>\r\n                <TableCell align=\"right\">{row.bookingType}</TableCell>\r\n                <TableCell align=\"right\">{row.bookingDate} at {row.bookingTime}</TableCell>         \r\n              </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </Paper>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}